{
    "/html.test/": {
        "title": "Home",
        "text": "নমস্কার! Welcome to HTML.org.in Your gateway to mastering web development. Your advertisement-free hub for learning web development At HTML.org.in, we believe in  free, accessible education  without distractions. Our platform offers: 1 Open Learning for All 100% ad-free learning experience 💻 Completely free tutorials and resources 🆓 No registration is required 🚫 Zero tracking or data collection 2 Why Choose Us? 📖 Comprehensive, community-driven content 🌍 Available to everyone worldwide 🔄 Always up-to-date with latest standards 👩💻 Beginner-friendly approach For now, your are done; you are good to go for the next chapter"
    },
    "/html.test/html/html-introduction/": {
        "title": "HTML Introduction",
        "text": "HTML Introduction HTML is the standard markup language. It looks like a skeleton for a website. A simple HTML structure HTML <! DOCTYPE  html > \n     < html > \n     < head > \n         < title >Page title</ title > \n     </ head > \n     < body > \n         < h1 >My first heading</ h1 > \n         < p >My first paragraph</ p > \n     </ body > \n     </ html > This is our code preview  Let's talk about previous example <!DOCTYPE html> This is used to define that website is created with HTML5. <html> This is the root element. <head> This tag is used for add about website metadata and link stylesheet. <title> This tag is used to add website title. <body> We use this tag to add visible contents like images, paragraphs, hyperlinks, lists, tables, etc <h1> Element defines a large heading. <p> Element defines a paragraph. Let's talk about How HTML Work & How we write. HTML stands for hypertext markup language. When using HTML, we should keep in mind that every HTML element requires an opening & closing bracket. But there are some exceptions, such as [<br>, <hr>, <img>, <link>] etc. Tags like this are self-closing. This tag should be started with < this, then followed by your element argument, followed by> let's write it together \"<html> \" This is an opening tag. This tag should now be closed using the \"/\" symbol. What's the best way to do it? After the first bracket, we need to add \"/\" ,then followed by your element argument, followed by> let's write it together </html> This is the closing tag. Let's discuss about the HTML history 1989 - Tim Berners-Lee invented www 1991 - Tim Berners-Lee invented HTML 1995 - HTML Working Group defined HTML 2.0 1997 - W3C Recommendation: HTML 3.2 1999 - W3C Recommendation: HTML 4.01 2000 - W3C Recommendation: XHTML 1.0 2008 - W3C HTML5 First Public Draft 2016 - W3C Candidate Recommendation: HTML 5.1 For now, the introduction is done; you are good to go for the next chapter"
    },
    "/html.test/html/html-editors/": {
        "title": "HTML Editors",
        "text": "HTML Editors Hey, you only need a text editor, Then the whole world will become a canvas. Then you are good to go for HTML. About Editors To be honest you can use any text editor. Like notepad ++, vs code, brackets, atom etc In my opinion, you should use VS Code. It is very easy to use. Download instructions. Open you favorite search engine and search for VS Code. Choose from this  Your Are Done You just need to install it on your PC. See you in the next chapter"
    },
    "/html.test/html/vscode-extensions-for-html/": {
        "title": "VSCode Extensions For HTML",
        "text": "VSCode Extensions For HTML Hey, In previous section you have learned about what are text editors and how you can use them as well as which text editor is best for you, Now we will get to know that what basically extensions are and how they integrate with VSCode and increase our productivity About Extensions In a very simple way, Extensions in text editors are nothing but a way to extends the functionality of our text editor. As here we are working on VSCode so we can learn about how do we use extensions in vscode. How To Use Extensions To use extension in our VSCode editor we need to download them inside our VSCode and then install them, after that we will good to go to use them. Where To Find Extensions VSCode provides their own  marketplace  to download extensions for free. OR you can download them directly from your VSCode, see the below image Must have VSCode Extensions for HTML 1 Live Server Live server is a vscode extension which helps you to see the changes instantly on browser once you hit save on your vscode, you do not need to save changes and go to browser and hit refresh, it will be automatically refresh by browser once you install and start this extension. Download / guide from market place 2 Auto Close Tag Auto Close Tag is an extensions which solves your problem to open or close tags explicitly, now you just need to open the tag and it wil close automatically with the help of this extension Download / guide from market place 3 HTML CSS Support Html Css support is an extension which helps you to auto complete your id and class names in your html elements. Download / guide from market place 4 HTML Preview An extension to preview HTML files while editing them in VSCode Download / guide from market place You are done for now"
    },
    "/html.test/html/html-basic/": {
        "title": "HTML Basic",
        "text": "HTML Basic In this lecture, we are going to talk about some basic HTML example. HTML Documents All HTML documents need to declare the document type.  <!DOCTYPE html> All HTML documents start with  <html>  tag itself All HTML documents end with  </html>  tag itself All HTML document contains the visual part of the  <body>  tag HTML Headings Headings are used to create a title for the HTML document. There are 6 types of heading h1 is the most important heading & h6 is the less important heading. h1 heading is also important from an SEO perspective. HTML < h1 > Heading number 1</ h1 > \n < h2 > Heading number 2</ h2 > \n < h3 > Heading number 3</ h3 > \n < h4 > Heading number 4</ h4 > \n < h5 > Heading number 5</ h5 > \n < h6 > Heading number 6</ h6 > This is our code preview  HTML Paragraphs HTML paragraphs are defined with the <p> tag HTML < p > This is a paragraph </ p > \n < p > This is a another paragraph </ p > HTML Links HTML links are defined with the <a> tag HTML < a  href = \"https://www.html.org.in\" > This is a link </ a > The link's destination is specified in the href attribute. Attributes are used to provide additional information about HTML elements. You will learn more about attributes in a later chapter. HTML Images HTML images are defined with the  <img>  tag We use (src) for source file. We use (alt) for alternative text. We use (width) for width of image. We use (height) for height of image. We use (title) for title of image. HTML < img src = \"html-org-in.png\"  alt = \"html.org.in\"  width = \"250\"  height = \"250\"  > Html Media tag There are some special tags which are used to add Videos & Audios in your Html page! You can add videos in your HTML page using the <video> tag HTML < video  controls > \n < source  src = \"your file.mp4\" > \n </ video > By the use of this tag you'll get some features in your video like: Play/Pause Volume Fullscreen etc. Similarly, you can add audios in your HTML page using the <audio> tag HTML < audio  controls > \n < source  src = \"your file.mp3\" > \n </ audio > That's all for this lesson, see you next one."
    },
    "/html.test/html/html-elements/": {
        "title": "HTML Elements",
        "text": "HTML Elements An HTML element is defined by a start tag, some content, and an end tag. One Element on other Elements HTML elements can be nested inside of each other. It means that you can add an HTML element inside another HTML element. as we all know HTML itself is an element. & also we know we need to add body & body so on. if you remember our previous post HTML Basic then you can recognize head & body also a HTML element. This is a very important point to understand. HTML <! DOCTYPE  html > \n < html  lang = \"en\" > \n < head > \n </ head > \n < body > \n     < p >This is a paragraph.</ p > \n     < h1 >This is a heading.</ h1 > \n </ body > \n </ html > Example Explained We start with  html  tag Which is an element itself After that, we add  head & body ***So in this case  head and body  are Nested with HTML tag*** That's all for this lesson, see you next one."
    },
    "/html.test/html/html-attributes/": {
        "title": "HTML Attributes ",
        "text": "HTML Attributes  In this lecture, we are going to talk about some HTML attribute. HTML Attributes All html element can have  Attributes Attribute can provide some  additional information  About html elements Attributes usually come in name/value pairs like:  name=\"value\" Let's talk about herf tage The <a> tag defines a hyperlink. The href attribute specifies the URL of the page the link goes to: HTML < a  href = \"https://www.html.org.in\" >Go to HTML.ORG.IN</ a > Let's talk about Download file when clicking on the link (instead of navigating to the file) tage The download inside the a tag specifies that the target (the file specified in the href attribute) will be downloaded when a user clicks on the hyperlink. HTML < a  href = \"file.pdf\"  download > \n     < img  src = \"download_logo.jpg\"  alt = \"W3Schools\"  width = \"100\"  height = \"100\" > \n </ a > Let's talk about src tage The <img> tag defines an image. The src attribute specifies the URL of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\" > There are two ways to specify the URL in the src attribute Absolute URL: https://www.html.org.in/img-1.png Now question is, how do we know that the URL is absolute? Absolute URL is a URL that starts with http:// or https://, Links to an external image that is hosted on another website. Note:- Maybe you don't own the copyright of the image & Then if you use this image, you may be violated copyright law. 2.   Relative URL: ./html-img/a       Now question is, What is relative URL?       Relative URL is a URL that starts with ./ or ../, Links to an image that is hosted on the same website. Tip:- If you ask me I'll recommend you to use a relative URL. Because in the future you may want to move your website to another domain, Then your website will never break. Let's talk about alt tage The <img> tag defines an image. The alt attribute specifies an alternate text for the image, if the image cannot be displayed: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\" > Note:- The alt attribute is used to specify an alternate text for an image, if the image cannot be displayed. Let's talk about title tage The <img> tag defines an image. The title attribute specifies extra information about the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\" > Note:- The title attribute is used to specify extra information about an image. Let's talk about width tage The <img> tag defines an image. The width attribute specifies the width of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\"  width = \"100\" > Let's talk about height tage The <img> tag defines an image. The height attribute specifies the height of the image: HTML < img  src = \"https://www.html.org.in/img-1.png\"  alt = \"HTML.ORG.IN\"  title = \"HTML.ORG.IN\"  width = \"100\"  height = \"100\" > That's all for this lesson, see you next one."
    }
}